package com.xauv.algorithm.基本数据结构.B树;
/*
       /\   /\             /\.__                      
___  __)/___)/  __ _____  _)/|  |   _______  __ ____  
\  \/  /\__  \ |  |  \  \/ / |  |  /  _ \  \/ // __ \ 
 >    <  / __ \|  |  /\    /  |  |_(  <_> )   /\  ___/
/__/\_ \(____  /____/  \_/   |____/\____/ \_/  \___  >
      \/     \/                                    \/
*/

/**
 * @Date 2022/1/2 15:58
 * @Author Administrator
 * @Package com.xauv.algorithm.基本数据结构.B树
 * @Desc
 *
 *
 * 例子：
 * 4 阶 B-Tree
 *
 * 性质：
 *
 *  所有节点能存储的元素个数：1-3，也就是节点最多存储 3 个元素，最少存储 1 个元素
 *  注意：如果是 5 阶 B-Tree，则根节点最多存储 5-1=4 个元素，非叶子节点最多存储 5-1=4 个，最少存储 ceiling(5/2)-1=2 个
 *
 *  上溢
 *
 *  下溢
 *
 *
 * 添加节点：全部添加在子节点
 *
 * 删除节点：全部在子节点删除（不管是删除中间节点还是删除子节点，如果是删除中间节点，需要找到中间节点的前驱并替换
 * ）
 */
public class BTree {
}
