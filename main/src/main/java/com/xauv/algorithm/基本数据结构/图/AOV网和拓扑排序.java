package com.xauv.algorithm.基本数据结构.图;
/*
       /\   /\             /\.__                      
___  __)/___)/  __ _____  _)/|  |   _______  __ ____  
\  \/  /\__  \ |  |  \  \/ / |  |  /  _ \  \/ // __ \ 
 >    <  / __ \|  |  /\   /  |  |_(  <_> )   /\  ___/ 
/__/\_ \(____  /____/  \_/   |____/\____/ \_/  \___  >
      \/     \/                                    \/
*/

/**
 * @Date 2022/10/24 20:40
 * @Author Administrator
 * @Package com.xauv.algorithm.基本数据结构.图
 * @Desc
 *
 * 所有前置节点执行完成之后，才能继续向下执行，这样的节点网络叫做 AOV 网
 *
 * 如：
 * A -> B
 * B -> D
 * C -> D
 * D -> E
 *
 * 可以看到，B 前面有 A 节点，表示 B 执行前，必须 A 执行完
 * 同样，D 执行前，B C 需要先执行完【当然 A 也应该执行完】
 * E 执行时，A B C D，都得执行完
 *
 * 这样形成的网络叫做 AOV 网：activity on vertex network
 *
 * 这样的顺序结构，叫做拓扑排序，序列为：
 * 1.A B C D E
 * 2.A C B D E
 *
 * 拓扑排序可以有多个，只要保证前驱活动和后继后动的相对顺序正确即可
 *
 * 拓扑排序可由 卡恩算法 实现
 *
 *
 */
public class AOV网和拓扑排序 {
}
