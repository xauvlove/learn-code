package com.xauv.algorithm.算法.递归;
/*
       /\   /\             /\.__                      
___  __)/___)/  __ _____  _)/|  |   _______  __ ____  
\  \/  /\__  \ |  |  \  \/ / |  |  /  _ \  \/ // __ \ 
 >    <  / __ \|  |  /\   /  |  |_(  <_> )   /\  ___/ 
/__/\_ \(____  /____/  \_/   |____/\____/ \_/  \___  >
      \/     \/                                    \/
*/

/**
 * @Date 2022/10/26 20:12
 * @Author Administrator
 * @Package com.xauv.algorithm.算法.递归
 * @Desc
 *
 * 递归套路
 *
 * 1.先明确函数功能
 *
 * 2.明确问题和子问题的关系
 * 寻找 f(n)和f(n-1)的关系
 *
 * 3.明确递归基（边界条件）
 *
 * 递归使用场景
 * 大问题可分解成小问题
 * 由小问题的解获取大问题的解
 *
 * 链表，二叉树都是这种问题
 * 链表中包含小链表
 * 二叉树包含小二叉树
 */
public class 递归 {
}
