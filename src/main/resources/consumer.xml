<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <dubbo:application name="spring-dubbo-client"/>

    <!--<dubbo:registry address="multicast://224.1.1.1:9333"></dubbo:registry>-->
    <dubbo:registry address="zookeeper://localhost:2181"/>

    <!-- mock 是配置在客户端，当发生异常时 比如超时，调用 mock 的方法，返回 mock 数据 -->
    <!-- 类似于服务降级 但不是服务降级 和服务降级的概念有一些区别，服务降级应该发生在服务端，而这个 mock 却是在客户端配置的 负载均衡：最少活跃-->
    <!--粘滞连接，使相同客户端总是打到同一服务器上，适合于有本地缓存的情况-->
    <!--开启延迟连接，只有当服务发起调用时才开启长连接，用于减少连接数量-->
    <dubbo:reference id="userService" interface="com.xauv.dubbo.combinespring.service.UserService" timeout="1000" sticky="true"
                     mock="com.xauv.dubbo.combinespring.service.mock.UserServiceMockImpl" loadbalance="leastactive" lazy="true"/>
</beans>